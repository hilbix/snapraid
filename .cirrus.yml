# Only run "distcheck" for "master" or PRs.
# Note: I do not know (yet) how to do Cirrus CI with clang

gcc_task:
  prep_script: autoreconf -i
#  configure_script: ./configure --enable-warning-as-error	# fails with: -Werror=zero-length-bounds
  configure_script: ./configure
  make_script: make all
  check_script: '[ master != "$CIRRUS_BRANCH" ] && [ -z "$CIRRUS_PR" ] || make distcheck'
  container:
    image: gcc:latest

# Be nice to the CI, only run the others if the initial task succeeds

oldgcc_task:
  depends_on:
    - gcc
  prep_script: autoreconf -i
  configure_script: ./configure --enable-warning-as-error
  make_script: make all
  check_script: '[ master != "$CIRRUS_BRANCH" ] && [ -z "$CIRRUS_PR" ] || make distcheck'
  container:
    matrix:
      image: gcc:8
      image: gcc:7

osx_task:
  depends_on:
    - gcc
  brew_script: brew install autoconf automake
  prep_script: autoreconf -i
  configure_script: ./configure --enable-warning-as-error
  make_script: make all
  check_script: '[ master != "$CIRRUS_BRANCH" ] && [ -z "$CIRRUS_PR" ] || make distcheck'
  osx_instance:
    matrix:
      image: mojave-xcode
      image: mojave-xcode-10.3

freebsd_task:
  depends_on:
    - gcc
  pkg_script: env ASSUME_ALWAYS_YES=YES pkg install autoconf automake
  prep_script: autoreconf -i
#  configure_script: ./configure --enable-warning-as-error	# for some unknown reason this is errors due to -Wunused-function
  configure_script: ./configure
  make_script: make all
  check_script: '[ master != "$CIRRUS_BRANCH" ] && [ -z "$CIRRUS_PR" ] || make distcheck'
  freebsd_instance:
    matrix:
      image_family: freebsd-13-0-snap
      image_family: freebsd-12-1-snap

